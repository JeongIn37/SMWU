mpg <- mpg %>% relocate(drv_price, .before = city)
View(mpg)
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
View(mpg)
driving_price <- NULL
mpg$driving_price <- NULL
View(mpg)
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
mpg <- mpg %>% relocate(drv_price, .before = city)
View(mpg)
mpg$drv_price.x<-NULL
mpg$drv_price.y<-NULL
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c(4,"forward","rear"), drv_price = c(40000, 30000, 50000))
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
mpg <- mpg %>% relocate(drv_price, .before = city)
View(mpg)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F)
library(dplyr)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F, fileEncoding = "CP949", encoding = "UTF-8")
View(exam_add)
exam <- bind_rows(exam, exam_add)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F, fileEncoding = "CP949", encoding = "UTF-8")
exam <- bind_rows(exam, exam_add)
rlang::last_error()
summary(exam)
str(exam)
str(exam_add)
exam_add$class <- as.factor(exam_add$class)
str(exam_add)
exam <- bind_rows(exam, exam_add)
View(exam)
exam <- exam %>% distinct(id, class, total, .keep_all = T)
### 21. 통합된 exam 데이터 프레임에서 id=34는 id만 다를 뿐, id=29와 동일한 사례이므로 제거하시오.
exam <- exam %>% distinct(class, total, .keep_all = T)
### 21. 통합된 exam 데이터 프레임에서 id=34는 id만 다를 뿐, id=29와 동일한 사례이므로 제거하시오.
exam <- exam %>% distinct(class, address, total, .keep_all = T)
exam
View(exam_123)
### 22. average 변수 측정결과가 NA인 사례에 대해 세 과목에 대한 실제 평균값을 구해서 이 값으로 대체하시오.
exam_new <- exam
View(exam_new)
exam_new$average <- ifelse(is.na(exam_new$average), exam_new$total/3, exam_new$average)
exam$average <- ifelse(is.na(exam$average), exam$total/3, exam$average)
View(exam)
exam$average <- round(exam$average, digits=2)
### 23. science 변수 측정결과가 NA인 사례에 대해 다른 사례들의 science 평균값으로 대체하시오.
mean(exam$Science, na.rm = T)
exam$Science <- ifelse(is.na(exam$Science), mean(exam$Science, na.rm = T), exam$Science)
### midwest 데이터 프레임을 이용한 실습
library(ggplot2)
midwest <- midwest
### 2. popadults는 해당 지역 성인인구, poptotal은 해당 지역 전체 인구를 의미한다. 지역별 '미성년 인구비율' 변수(percyouth)를 만드시오.
midwest$percyouth = mutate(midwest$poptotal - midwest$popadults)
### 2. popadults는 해당 지역 성인인구, poptotal은 해당 지역 전체 인구를 의미한다. 지역별 '미성년 인구비율' 변수(percyouth)를 만드시오.
str(midwest)
midwest$poptotal - midwest$popadults
midwest$popadults / midwest$poptotal
1- (midwest$popadults / midwest$poptotal)
midwest$percyouth = mutate(1- (midwest$popadults / midwest$poptotal))
midwest$percyouth %>% mutate(1- (midwest$popadults / midwest$poptotal))
midwest <- midwest %>% mutate(percyouth = 1- (midwest$popadults / midwest$poptotal))
View(midwest)
##문제1##
library(ggplot2)
library(tidyr)
##문제1##
library(ggplot2)
midwest <- ggplot2::midwest
##문제2##
midwest <- midwest %>% mutate(percyouth = (1 - popadults/poptotal)*100)
##문제3##
midwest %>% select(county, percyouth) %>% arrange(-percyouth) %>% head(5)
##문제4##
midwest <- midwest %>% mutate(group = ifelse(percyouth >= 40, "large", ifelse(percyouth >= 30, "middle", "small")))
table(midwest$group)
##문제5##
midwest_add <- read.csv("midwest_add.csv", stringsAsFactors = F)
midwest <- left_join(midwest, midwest_add, by = c("county" = "region"))
##문제6##
midwest <- midwest %>% distinct(PID, county, state, .keep_all = T)
##문제7##
table(midwest$state)
midwest %>% group_by(state) %>% filter(!is.na(senior)) %>% summarise(sum_senior = sum(senior))
##문제8##
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
table(is.na(midwest$senior))
midwest <- midwest %>% drop_na()
##문제9##
midwest %>% group_by(category) %>% summarise(mean_popasian = mean(popasian)) %>% arrange(mean_popasian) %>% head(3)
midwest %>% select(inmetro:last_col())
View(mpg)
View(mpg)
View(fuel_price)
View(midwest)
View(midwest)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(percyouth)
midwest$percyouth
midwest$mean(percyouth)
##문제1##
library(ggplot2)
midwest$mean(percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(midwest$percyouth)
midwest$mean(midwest$percyouth)
mean(exam_123$math)
str(midwest$percyouth)
mean(midwest$percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(midwest$percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(percyouth) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percyouth) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(percyouth)) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(percyouth)) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(midwest$percyouth))
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(midwest$percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(1)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(1)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean(total))
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100))
mean((popasian/poptotal)*100)
mean((midwest$popasian/midwest$poptotal)*100)
mean((midwest$popasian/midwest$poptotal))
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100))
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(asia_mean)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean)
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
(midwest$senior/midwest$poptotal)*100
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
senior_portion = midwest$senior/midwest$poptotal*100
midwest <- midwest %>% mutate(grade = ifelse(senior_portion >= 15, "very large", ifelse(senior_portion >= 8, "large", ifelse(senior_portion >= 5, "middle", "small"))))
###문제4. grade에 대한 빈도를 구하시오.
table(midwest$grade)
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grad, levels = c("very large", "large", "middle", "small"))
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grade, levels = c("very large", "large", "middle", "small"))
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
View(midwest_add)
View(midwest_income)
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior_portion < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% select(county) %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5) %>% select(county)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5) %>% mean(income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5) %>%
mean(midwest$income)
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% mean(income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean) %>% head(1)
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean) %>% head(1)
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
senior_portion = midwest$senior/midwest$poptotal*100
midwest <- midwest %>% mutate(grade = ifelse(senior_portion >= 15, "very large", ifelse(senior_portion >= 8, "large", ifelse(senior_portion >= 5, "middle", "small"))))
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grade, levels = c("very large", "large", "middle", "small"))
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
View(midwest_add)
View(midwest_income)
View(midwest)
##문제1##
library(ggplot2)
midwest <- ggplot2::midwest
##문제2##
midwest <- midwest %>% mutate(percyouth = (1 - popadults/poptotal)*100)
##문제3##
midwest %>% select(county, percyouth) %>% arrange(-percyouth) %>% head(5)
##문제4##
midwest <- midwest %>% mutate(group = ifelse(percyouth >= 40, "large", ifelse(percyouth >= 30, "middle", "small")))
table(midwest$group)
##문제5##
midwest_add <- read.csv("midwest_add.csv", stringsAsFactors = F)
midwest <- left_join(midwest, midwest_add, by = c("county" = "region"))
##문제6##
midwest <- midwest %>% distinct(PID, county, state, .keep_all = T)
##문제7##
table(midwest$state)
midwest %>% group_by(state) %>% filter(!is.na(senior)) %>% summarise(sum_senior = sum(senior))
##문제8##
install.packages("tidyr")
library(tidyr)
table(is.na(midwest$senior))
midwest <- midwest %>% drop_na()
##문제9##
midwest %>% group_by(category) %>% summarise(mean_popasian = mean(popasian)) %>% arrange(mean_popasian) %>% head(3)
midwest %>% select(inmetro:last_col())
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean) %>% head(1)
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
senior_portion = midwest$senior/midwest$poptotal*100
midwest <- midwest %>% mutate(grade = ifelse(senior_portion >= 15, "very large", ifelse(senior_portion >= 8, "large", ifelse(senior_portion >= 5, "middle", "small"))))
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grade, levels = c("very large", "large", "middle", "small"))
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior_portion < 5) %>% select(county, income) %>% summarise(mean(income))
midwest_new <- midwest %>% select(percyouth,senior_portion,income) %>% filter(percyouth>=40 & senior_portion<5)
midwest_new <- midwest %>% select(percyouth,senior_portion,income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest_test <- midwest %>% filter(percyouth >= 40 & senior_portion < 5) %>% select(county, income)
mean(midwest_test$income)
install.packages("foreign")
library(foreign)
raw_welfare <- read.spss(file="2015 welfare.sav", to.data.frame = T)
welfare <- raw_welfare
View(raw_welfare)
View(welfare)
welfare <- welfare %>% rename(gender = h10_g3, birth = h10_g4, marriage = h10_g10, religion = h10_g11, job = h10_eco9, income = p1002_8aq1, region = h10_reg7)
#7개 변수로만 구성된 데이터 프레임 만들기
welfare7 <- welfare %>% select(gender, birth, marriage, religion, job, income, region)
#성별 변수 전처리
welfare7$gender <- ifelse(welfare7$gender == 1, "male", "female")
table(welfare7$gender)
welfare7$gender <- as.factor(welfare7$gender)
str(welfare7)
# 월급 변수 전처리
summary(welfare7$income)
hist(welfare7$income, breaks = seq(0, 2400, by=50)
hist(welfare7$income, breaks = seq(0, 2400, by=50))
hist(welfare7$income, breaks = seq(0, 2400, by=50))
welfare7$income <- ifelse(welfare7$income == 9999, NA, welfare$income)
head(welfare)
install.packages("foreign")
library(foreign)
library(dplyr)
## 데이터 프레임 만들기 ##
raw_welfare <- read.spss(file = "2015 welfare.sav", to.data.frame = T)
welfare <- raw_welfare
##변수명 바꾸어서 서브 데이터 프레임 만들기##
welfare <- welfare %>% rename(gender = h10_g3, birth = h10_g4, marriage = h10_g10, religion = h10_g11, job = h10_eco9, income = p1002_8aq1, region = h10_reg7)
welfare7 <- welfare %>% select(gender, birth, marriage, religion, job, income, region)
## 성별 변수 전처리 ##
str(welfare7$gender)
summary(welfare7$gender)
table(welfare7$gender)
welfare7$gender <- ifelse(welfare7$gender == 1, "male", "female")
welfare7$gender <- as.factor(welfare7$gender)
## 월급 변수 전처리 ##
summary(welfare7$income)
hist(welfare7$income, breaks = seq(0, 2400, by = 50))
welfare7$income <- ifelse(welfare7$income == 9999, NA, welfare7$income)
head(welfare)
table(welfare7$income == 0)
welfare7$income <- ifelse(welfare7$income == 0, NA, welfare7$income)
table(is.na(welfare7$income))
## 성별에 따른 월급 차이 분석 ##
gender_income <- welfare7 %>% group_by(gender) %>% summarise(mean_income = mean(income, na.rm = T))
library(ggplot2)
ggplot(gender_income, aes(gender, mean_income, fill = mean_income)) + geom_bar(stat = "identity")
install.packages("foreign")
install.packages("foreign")
middle <- read.csv("middle.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
library(dplyr)
library(ggplot2)
#한글깨짐해결용
install.packages("extrafont")
library(extrafont)
font_import()
font_import()
library(ggplot2)
theme_set(theme_grey(base_family="AppleGothic"))
ggplot(mpg, aes(displ, higway)) + geom_point()
ggplot(mpg, aes(displ, highway)) + geom_point()
ggplot(mpg, aes(displ, highway)) + geom_point() + xlim(3, 6) + ylim(20, 30)
ggplot(mpg, aes(displ, highway, color = fuel)) + geom_point() + xlim(3, 6) + ylim(20, 30)
ggplot(mpg, aes(displ, highway, color = fuel)) + geom_point()
ggplot(mpg, aes(displ, highway, color = fuel)) + geom_point() + xlim(3, 6) + ylim(20, 30)
ggplot(mpg, aes(displ, highway, color = fuel)) + geom_point()
ggplot(mpg, aes(displ, highway, color = fuel)) + geom_point(aes(shape = drv, size= fuel))
#shape, size
ggplot(mpg, aes(displ, highway, color = drv)) + geom_point(aes(shape = drv, size= fuel))
ggplot(mpg, aes(city, highway)) + geom_point()
ggplot(mpg, aes(city, highway)) + geom_point() + xlim(0, 30) + ylim(0, 40)
ggplot(mpg, aes(city, highway)) + geom_point() + xlim(10, 30) + ylim(0, 40)
ggplot(mpg, aes(city, highway, color = cyl)) + geom_point(aes(shape = drv)) + xlim(10, 30) + ylim(0, 40)
ggplot(mpg, aes(city, highway, color = cyl)) + geom_point(aes(shape = drv)) + xlim(0, 30) + ylim(0, 40)
ggplot(mpg, aes(city, highway, color = cyl)) + geom_point(aes(shape = drv)) + xlim(0, 30) + ylim(0, 40) + geom_smooth()
#추세선 추가
ggplot(mpg, aes(city, highway, color = cyl)) + geom_point(aes(shape = drv)) + xlim(0, 30) + ylim(0, 40) + geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state))  + geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state)) + xlim(0, 30) + ylim(0, 350000) + geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state)) +
geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state)) + xlim(0, 30) + ylim(0, 5000) + geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state)) + xlim(0, 350000) + ylim(0, 5000) + geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state))
+ xlim(0, 350000) + ylim(0, 5000) + geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state)) + xlim(0, 350000) + ylim(0, 5000) + geom_smooth()
#추세선 추가
ggplot(mpg, aes(city, highway, color = cyl)) + geom_point(aes(shape = drv)) + xlim(0, 30) + ylim(0, 40) + geom_smooth()
### midwest 실습문제
ggplot(midwest, aes(poptotal, popasian, color = state)) + geom_point(aes(shape = state)) + xlim(0, 350000) + ylim(0, 5000) + geom_smooth()
library(dplyr)
library(ggplot2)
#한글깨짐해결용
install.packages("extrafont")
library(extrafont)
font_import()
library(ggplot2)
theme_set(theme_grey(base_family="AppleGothic"))
### 막대 그래프 그리기 ###
library(dplyr)
library(ggplot2)
df_mpg <- mpg %>% group_by(drv) %>% summarise(mean_sum = mean(sum))
View(df_mpg)
ggplot(df_mpg, aes(drv, mean_sum) + geom_bar(stat = "identity"))
ggplot(df_mpg, aes(drv, mean_sum)) + geom_bar(stat = "identity")
ggplot(df_mpg, aes(reorder(drv, mean_sum), mean_sum)) + geom_bar(stat = "identity")
ggplot(df_mpg, aes(reorder(drv, -mean_sum), mean_sum)) + geom_bar(stat = "identity")
ggplot(df_mpg, aes(reorder(drv, -mean_sum), mean_sum, fill = drv)) + geom_bar(stat = "identity")
ggplot(mpg, aes(class)) + geom_bar()
ggplot(mpg, aes(highway)) + geom_bar()
ggplot(mpg, aes(class, fill=class)) + geom_bar()
ggplot(mpg, aes(class, fill=class)) + geom_bar() + xlim(c("compact", "midsize", "suv"))
ggplot(mpg, aes(class, fill=class)) + geom_bar() + coord_flip()
ggplot(mpg, aes(class, fill=class)) + geom_bar() + coord_polar()
ggplot(mpg, aes(class, fill=fuel)) + geom_bar()
ggplot(mpg, aes(class, fill=fuel)) + geom_bar(position = "dodge")
ggplot(mpg, aes(class, fill=fuel)) + geom_bar(position = "fill")
mpg
df_mpg <- mpg %>% group_by(drv) %>% summarise(mean_sum = mean(sum))
ggplot(df_mpg, aes(drv, mean_sum)) + geom_bar(stat = "identity")
df_suv <- mpg %>% group_by(manufacturer) %>% summarise(mean_city = mean(city))
View(df_suv)
# 막대 그래프 실습 문제 (self)
df_suv <- mpg %>% group_by(manufacturer) %>% summarise(mean_city = mean(city))
ggplot(df_suv, aes(reorder(manufacturer, -mean_city), mean_city, fill = manufacturer)) + geom_bar(stat = "identity")
ggplot(mpg, aes(class, fill=class)) + geom_bar() + coord_flip()
ggplot(df_suv, aes(reorder(manufacturer, -mean_city), mean_city, fill = manufacturer)) + geom_bar(stat = "identity") + coord_flip()
# 막대 그래프 실습 문제 (교수님ver)
mpg_suv <- mpg %>% group_by(manufacturer) %>% filter(class=="suv") %>% summarise(mean_city = mean(city)) %>% arrange(-mean_city) %>% head(5)
View(mpg_suv)
ggplot(mpg_suv, aes(reorder(manufacturer, -mean_city), mean_city, fill = manufacturer)) + geom_bar(stat = "identity") + coord_flip()
ggplot(mpg_suv, aes(reorder(manufacturer, mean_city), mean_city, fill = manufacturer)) + geom_bar(stat = "identity") + coord_flip()
ggplot(mpg_suv, aes(reorder(manufacturer, mean_city), mean_city, fill = manufacturer)) + geom_bar(stat = "identity") + coord_flip() + labs(title = "회사별 suv 도심연비 평균 비교", x = "제조사", y = "suv 도심연비 평균")
### 히스토그램 그리기 ###
ggplot(mpg, aes(highway)) + geom_histogram()
ggplot(mpg, aes(highway)) + geom_histogram(binwidth = 0.5)
ggplot(mpg, aes(highway)) + geom_histogram(binwidth = 5)
ggplot(mpg, aes(highway)) + geom_histogram(binwidth = 1)
ggplot(mpg, aes(highway)) + geom_histogram(binwidth = 1, fill = "yellow", color = "red") + labs(title = "고속도로연비 히스토그램", x = "고속도로연비", y = "빈도")
library(dplyr)
library(ggplot2)
#한글깨짐해결용
install.packages("extrafont")
install.packages("extrafont")
font_import()
#한글깨짐해결용
install.packages("extrafont")
library(extrafont)
font_import()
theme_set(theme_grey(base_family="AppleGothic"))
library(ggplot2)
theme_set(theme_grey(base_family="AppleGothic"))
economics <- ggplot2::economics
View(economics)
str(economics)
ggplot(economics, aes(date, unemploy)) + geom_line()
ggplot(economics, aes(date, unemploy)) + geom_line() + geom_point()
ggplot(economics, aes(date, unemploy)) + geom_line(color = "red") + geom_point(color = "darkred")
ggplot(economics, aes(date, unemploy)) + geom_line(color = "red") + geom_point(color = "blue4")
### 상자 그래프 그리기 ####
ggplot(mpg, aes(drv, highway)) + geon_boxplot()
### 상자 그래프 그리기 ####
ggplot(mpg, aes(drv, highway)) + geom_boxplot()
ggplot(mpg, aes(drv, highway), fill = drv) + geom_boxplot()
ggplot(mpg, aes(drv, highway,, fill = drv)) + geom_boxplot()
ggplot(mpg, aes(drv, highway,, fill = drv)) + geom_boxplot(outlier.color = "red")
ggplot(mpg, aes(drv, highway,, fill = drv)) + geom_boxplot(outlier.color = "red") + stat_summary(fun = "mean", geom = "point")
str(corona19)
### 코로나19 그래프 그리기 ###
corona19 <- read.csv("corona19.csv", stringsAsFactors = F)
str(corona19)
corona19$date <- as.Date(corona19$date)
str(corona19)
summary(corona19)
ggplot(corona19, aes(new_tests, new_cases)) + geom_point()
ggplot(corona19, aes(new_tests, new_cases)) + geom_point() + xlim(10000, 60000) + ylim(0, 3000)
ggplot(corona19, aes(new_tests, new_cases)) + geom_point() + xlim(10000, 60000) + ylim(0, 3000) + geom_smooth()
ggplot(corona19, aes(date, new_cases, fill = new_cases)) + geom_bar(stat = "identity")
ggplot(corona19, aes(date, new_cases)) + geom_line(color="red") + geom_point(color="blue")
ggplot(corona19, aes(date, new_deaths)) + geom_line(color="red") + geom_point(color="blue")
ggplot(corona19, aes(date, total_deaths)) + geom_line(color="red") + geom_point(color="blue")
ggplot(corona19, aes(date, positive.rate)) + geom_line(color="red") + geom_point(color="blue")
ggplot(corona19, aes(date, reproduction.rate)) + geom_line(color="red") + geom_point(color="blue")
ggplot(corona19, aes(date, people_fully_vaccinated)) + geom_line(color="red") + geom_point(color="blue")
corona19_new <- read.csv("corona19.csv", stringsAsFactors = F)
corona19_new$date <- as.Date(corona19_new$date)
ggplot(corona19_new, aes(date, number, color = type))
ggplot(corona19_new, aes(date, number, color = type)) + geom_line() + geom_point()
View(corona19_new)
corona19_new <- read.csv("corona19_new.csv", stringsAsFactors = F)
corona19_new$date <- as.Date(corona19_new$date)
ggplot(corona19_new, aes(date, number, color = type)) + geom_line() + geom_point()
crime <- USArrests
library(tibble)
crime <- rownames_to_column(crime, var = "state")
