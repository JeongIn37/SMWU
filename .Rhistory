exam_science <- read.csv("exam_science.csv", stringsAsFactors = F)
View(exam_science)
exam <- left_join(exam, exam_science, by="id")
### left_join 실습
###연료별 가격 데이터 프레임(fuel_price) 만들기
fuel_price <- data.frame(fuel=c("CNG","disel","ethanol","premium","regular"),fuel_price = c(2.35,2.38,2.11,2.76,2.22))
View(fuel_price)
mpg <- left_join(mpg, fuel_price, by="fuel")
View(mpg)
### left_join 실습
###연료별 가격 데이터 프레임(fuel_price) 만들기
fuel_price <- data.frame(fuel=c("CNG","diesel","ethanol","premium","regular"),fuel_price = c(2.35,2.38,2.11,2.76,2.22))
View(fuel_price)
mpg <- left_join(mpg, fuel_price, by="fuel")
View(mpg)
exam <- exam %>% relocate(Science, .before = total)
View(exam)
str(mpg$fuel)
mpg$fuel <- as.factor(mpg$fuel)
str(mpg$fuel)
str(fuel_price$fuel)
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
dry_price <- data.frame(driving=c("4","Forward","rear"), driving_price = c(40000, 30000, 50000))
View(dry_price)
rm(dry_price)
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c("4","Forward","rear"), driving_price = c(40000, 30000, 50000))
View(mpg)
View(mpg)
View(mpg)
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
View(mpg)
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c(4,"Forward","rear"), driving_price = c(40000, 30000, 50000))
View(drv_price)
mpg <- mpg
View(mpg)
View(mpg_ccCOM)
View(mpg_cc)
View(mpg_audi)
View(mpg)
###변수명 바꾸기
library(ggplot2)
View(mpg)
View(mpg)
View(mpg)
###변수명 바꾸기
library(ggplot2)
mpg <- mpg
mpg
rm(mpg)
mpg <- mpg
mpg
str(mpg)
summary(mpg)
table(mpg$drv)
table(mpg$fl)
library(dplyr)
mpg <- rename(mpg, fuel = fl)
mpg <- rename(mpg, city = cty)
mpg <- rename(mpg, highway = hwy)
mpg
###측정값 바꾸기
ifelse("A"=="B", "True", "False")
v1 <- 3
ifelse(v1 >= 3, "Y", "N")
mpg$drv <- ifelse(mpg$drv == "f", "forward", mpg$drv)
mpg$drv <- ifelse(mpg$drv == "r", "rear", mpg$drv)
mpg$fuel <- ifelse(mpg$fuel == "r", "regular", mpg$fuel)
mpg$fuel <- ifelse(mpg$fuel == "c", "CNG", mpg$fuel)
mpg$fuel <- ifelse(mpg$fuel == "p", "premium", mpg$fuel)
mpg$fuel <- ifelse(mpg$fuel == "e", "ethanol", mpg$fuel)
mpg$fuel <- ifelse(mpg$fuel == "d", "diesel", mpg$fuel)
mpg
### 4. 배기량이 4 이하인 자동차의 고속도로 연비평균과 배기량이 5 이상인 자동차의 고속도로 연비평균을 비교하시오.
mpg_4 <- mpg %>% filter(displ <= 4)
mpg_5 <- mpg %>% filter(displ >= 5)
### 5. 아우디와 도요타의 도심연비 평균을 비교하시오.
mpg_audi <- mpg %>% filter(manufacturer == "audi")
mpg_toyota <- mpg %>% filter(manufacturer == 'toyota')
mean(mpg_audi$city) > mean(mpg_toyota$city)
### 6. 세 회사(쉐보레, 포드, 혼다 자동차)의 고속도로연비 평균을 구하시오.
mpg_cfh <- mpg %>% filter(manufacturer %in% c("chevrolet", "ford", "honda"))
mean(mpg_cfh$highway)
### 8. mpg에서 class와 city 두 개 변수만을 추출해서 새로운 데이터 프레임(mpg_cc)을 만드시오.
mpg_cc <- mpg %>% select(class, city)
### 9. 위에서 만든 데이터 프레임에서 suv 자동차와 compact 자동차의 도시연비 평균을 비교하시오.
mpg_ccSUV <- mpg_cc %>% filter(class == "suv")
mpg_ccCOM <- mpg_cc %>% filter(class == "compact")
### 9. 위에서 만든 데이터 프레임에서 suv 자동차와 compact 자동차의 도시연비 평균을 비교하시오.
mpg_ccSUV <- mpg_cc %>% filter(class == "suv")
mpg_ccCOM <- mpg_cc %>% filter(class == "compact")
mean(mpg_ccSUV$city) > mean(mpg_ccCOM$city)
mpg
### 10. 아우디 모델 중에서 고속도로 연비가 가장 높은 상위 3개 모델은?
mpg_audi %>% arrange(desc(highway))
mpg %>% filter(manufacturer=="audi") %>% arrange(-highway) %>% head(3)
### 11. 파생변수 sum(통합연비: 도심연비와 고속도로연비 합산)을 만드시오.
mpg <- mpg %>% mutate(sum = city + highway)
### 12. 통합연비의 평균은 얼마인가?
mean(mpg$sum)
### 13. 파생변수 avg(평균연비: 도심연비와 고속도로연비 평균)를 만들고, 평균 연비가 가장 높은 자동차 모델 세 개가 무엇인지 확인하시오.
mpg <- mpg %>% mutate(avg = (city + highway)/2)
mpg %>% arrange(-avg) %>% head(3)
### 14. 자동차 모델을 제조사별, 구동방식별로 구분한 후, 도심연비평균과 고속도로연비평균 요약 결과를 제시하시오.
mpg %>% group_by(manufacturer, drv) %>% summarise(mean(city), mean(highway)) %>% print(n=100)
### 15. 자동차 모델을 제조사별로 구분한 후, suv 모델에 대해 통합 연비 평균 상위 3개 모델을 구하시오.
mpg %>% group_by(manufacturer) %>% filter(class=="suv") %>% summarise(mean_sum = mean(sum)) %>% arrange(-mean_sum) %>% head(3)
### 16. 평균 배기량이 가장 높은 세 개 변속기를 제시하시오
#변수기별 구분 -> 평균 배기량 구하기 -> arrange -> head -> summarise
mpg %>% group_by(trans) %>% summarise(mean_displ = mean(displ)) %>% arrange(-mean_displ) %>% head(3)
### 17. 4기통 모델을 가장 많이 생산하는 업체 세 곳을 순서대로 구하시오.
mpg %>% group_by(manufacturer) %>% filter(cyl == 4) %>% summarise(count = n()) %>% arrange(-count) %>% head(3)
vl <- c(1:30)
### left_join 실습
###연료별 가격 데이터 프레임(fuel_price) 만들기
fuel_price <- data.frame(fuel=c("CNG","diesel","ethanol","premium","regular"),fuel_price = c(2.35,2.38,2.11,2.76,2.22))
mpg <- left_join(mpg, fuel_price, by="fuel")
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c(4,"Forward","rear"), driving_price = c(40000, 30000, 50000))
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
mpg
View(mpg)
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c(4,"forward","rear"), driving_price = c(40000, 30000, 50000))
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
mpg
View(mpg)
### 20. fuel_price는 fuel 뒤로, drv_price는 city 앞으로 이동시키기
mpg <- mpg %>% relocate(fuel_price, .after=fuel)
mpg <- mpg %>% relocate(drv_price, .before = city)
View(drv_price)
View(mpg)
mpg$driving_price.x<-NULL
View(mpg)
mpg$driving_price.y<-NULL
View(drv_price)
View(fuel_price)
View(mpg)
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c(4,"forward","rear"), driving_price = c(40000, 30000, 50000))
View(mpg)
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
View(mpg)
mpg <- mpg %>% relocate(drv_price, .before = city)
mpg <- mpg %>% relocate(driving_price, .before = city)
mpg
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c(4,"forward","rear"), drv_price = c(40000, 30000, 50000))
mpg <- mpg %>% relocate(drv_price, .before = city)
View(mpg)
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
View(mpg)
driving_price <- NULL
mpg$driving_price <- NULL
View(mpg)
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
mpg <- mpg %>% relocate(drv_price, .before = city)
View(mpg)
mpg$drv_price.x<-NULL
mpg$drv_price.y<-NULL
### 19-1. 구동방식별 가격 데이터 프레임(drv_price) 만들기
drv_price <- data.frame(driving=c(4,"forward","rear"), drv_price = c(40000, 30000, 50000))
### 19-2. mpg와 drv_price 합치기
mpg <- left_join(mpg, drv_price, by=c("drv"="driving"))
mpg <- mpg %>% relocate(drv_price, .before = city)
View(mpg)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F)
library(dplyr)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F, fileEncoding = "CP949", encoding = "UTF-8")
View(exam_add)
exam <- bind_rows(exam, exam_add)
### bind_rows 함수 실습
exam_add <- read.csv("exam_add.csv", stringsAsFactors = F, fileEncoding = "CP949", encoding = "UTF-8")
exam <- bind_rows(exam, exam_add)
rlang::last_error()
summary(exam)
str(exam)
str(exam_add)
exam_add$class <- as.factor(exam_add$class)
str(exam_add)
exam <- bind_rows(exam, exam_add)
View(exam)
exam <- exam %>% distinct(id, class, total, .keep_all = T)
### 21. 통합된 exam 데이터 프레임에서 id=34는 id만 다를 뿐, id=29와 동일한 사례이므로 제거하시오.
exam <- exam %>% distinct(class, total, .keep_all = T)
### 21. 통합된 exam 데이터 프레임에서 id=34는 id만 다를 뿐, id=29와 동일한 사례이므로 제거하시오.
exam <- exam %>% distinct(class, address, total, .keep_all = T)
exam
View(exam_123)
### 22. average 변수 측정결과가 NA인 사례에 대해 세 과목에 대한 실제 평균값을 구해서 이 값으로 대체하시오.
exam_new <- exam
View(exam_new)
exam_new$average <- ifelse(is.na(exam_new$average), exam_new$total/3, exam_new$average)
exam$average <- ifelse(is.na(exam$average), exam$total/3, exam$average)
View(exam)
exam$average <- round(exam$average, digits=2)
### 23. science 변수 측정결과가 NA인 사례에 대해 다른 사례들의 science 평균값으로 대체하시오.
mean(exam$Science, na.rm = T)
exam$Science <- ifelse(is.na(exam$Science), mean(exam$Science, na.rm = T), exam$Science)
### midwest 데이터 프레임을 이용한 실습
library(ggplot2)
midwest <- midwest
### 2. popadults는 해당 지역 성인인구, poptotal은 해당 지역 전체 인구를 의미한다. 지역별 '미성년 인구비율' 변수(percyouth)를 만드시오.
midwest$percyouth = mutate(midwest$poptotal - midwest$popadults)
### 2. popadults는 해당 지역 성인인구, poptotal은 해당 지역 전체 인구를 의미한다. 지역별 '미성년 인구비율' 변수(percyouth)를 만드시오.
str(midwest)
midwest$poptotal - midwest$popadults
midwest$popadults / midwest$poptotal
1- (midwest$popadults / midwest$poptotal)
midwest$percyouth = mutate(1- (midwest$popadults / midwest$poptotal))
midwest$percyouth %>% mutate(1- (midwest$popadults / midwest$poptotal))
midwest <- midwest %>% mutate(percyouth = 1- (midwest$popadults / midwest$poptotal))
View(midwest)
##문제1##
library(ggplot2)
library(tidyr)
##문제1##
library(ggplot2)
midwest <- ggplot2::midwest
##문제2##
midwest <- midwest %>% mutate(percyouth = (1 - popadults/poptotal)*100)
##문제3##
midwest %>% select(county, percyouth) %>% arrange(-percyouth) %>% head(5)
##문제4##
midwest <- midwest %>% mutate(group = ifelse(percyouth >= 40, "large", ifelse(percyouth >= 30, "middle", "small")))
table(midwest$group)
##문제5##
midwest_add <- read.csv("midwest_add.csv", stringsAsFactors = F)
midwest <- left_join(midwest, midwest_add, by = c("county" = "region"))
##문제6##
midwest <- midwest %>% distinct(PID, county, state, .keep_all = T)
##문제7##
table(midwest$state)
midwest %>% group_by(state) %>% filter(!is.na(senior)) %>% summarise(sum_senior = sum(senior))
##문제8##
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
table(is.na(midwest$senior))
midwest <- midwest %>% drop_na()
##문제9##
midwest %>% group_by(category) %>% summarise(mean_popasian = mean(popasian)) %>% arrange(mean_popasian) %>% head(3)
midwest %>% select(inmetro:last_col())
View(mpg)
View(mpg)
View(fuel_price)
View(midwest)
View(midwest)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(percyouth)
midwest$percyouth
midwest$mean(percyouth)
##문제1##
library(ggplot2)
midwest$mean(percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(midwest$percyouth)
midwest$mean(midwest$percyouth)
mean(exam_123$math)
str(midwest$percyouth)
mean(midwest$percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% mean(midwest$percyouth)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(percyouth) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percyouth) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(percyouth)) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(percyouth)) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(3)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(midwest$percyouth))
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(mean(percyouth)) %>% arrange(mean(midwest$percyouth))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(1)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(-percy_mean) %>% head(1)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean(total))
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100))
mean((popasian/poptotal)*100)
mean((midwest$popasian/midwest$poptotal)*100)
mean((midwest$popasian/midwest$poptotal))
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100))
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(asia_mean)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean)
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
(midwest$senior/midwest$poptotal)*100
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
senior_portion = midwest$senior/midwest$poptotal*100
midwest <- midwest %>% mutate(grade = ifelse(senior_portion >= 15, "very large", ifelse(senior_portion >= 8, "large", ifelse(senior_portion >= 5, "middle", "small"))))
###문제4. grade에 대한 빈도를 구하시오.
table(midwest$grade)
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grad, levels = c("very large", "large", "middle", "small"))
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grade, levels = c("very large", "large", "middle", "small"))
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
View(midwest_add)
View(midwest_income)
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior_portion < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% select(county) %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5) %>% select(county)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5) %>% mean(income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40) %>% filter(senior/poptotal*100 < 5) %>%
mean(midwest$income)
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% mean(income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean) %>% head(1)
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean) %>% head(1)
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
senior_portion = midwest$senior/midwest$poptotal*100
midwest <- midwest %>% mutate(grade = ifelse(senior_portion >= 15, "very large", ifelse(senior_portion >= 8, "large", ifelse(senior_portion >= 5, "middle", "small"))))
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grade, levels = c("very large", "large", "middle", "small"))
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
View(midwest_add)
View(midwest_income)
View(midwest)
##문제1##
library(ggplot2)
midwest <- ggplot2::midwest
##문제2##
midwest <- midwest %>% mutate(percyouth = (1 - popadults/poptotal)*100)
##문제3##
midwest %>% select(county, percyouth) %>% arrange(-percyouth) %>% head(5)
##문제4##
midwest <- midwest %>% mutate(group = ifelse(percyouth >= 40, "large", ifelse(percyouth >= 30, "middle", "small")))
table(midwest$group)
##문제5##
midwest_add <- read.csv("midwest_add.csv", stringsAsFactors = F)
midwest <- left_join(midwest, midwest_add, by = c("county" = "region"))
##문제6##
midwest <- midwest %>% distinct(PID, county, state, .keep_all = T)
##문제7##
table(midwest$state)
midwest %>% group_by(state) %>% filter(!is.na(senior)) %>% summarise(sum_senior = sum(senior))
##문제8##
install.packages("tidyr")
library(tidyr)
table(is.na(midwest$senior))
midwest <- midwest %>% drop_na()
##문제9##
midwest %>% group_by(category) %>% summarise(mean_popasian = mean(popasian)) %>% arrange(mean_popasian) %>% head(3)
midwest %>% select(inmetro:last_col())
###문제1.주(state)별로 미성년인구백분율 평균을 구했을 때, 평균이 가장 낮은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(percy_mean = mean(percyouth)) %>% arrange(percy_mean) %>% head(1)
###문제2.주(state)별로 아시아인구백분율 평균을 구했을 때, 평균이 가장 높은 지역과 평균을 각각 구하시오.
midwest %>% group_by(state) %>% summarise(asia_mean = mean((popasian/poptotal)*100)) %>% arrange(-asia_mean) %>% head(1)
###문제3. 아래 표를 참고하여 새로운 변수 grade를 만드시오.
senior_portion = midwest$senior/midwest$poptotal*100
midwest <- midwest %>% mutate(grade = ifelse(senior_portion >= 15, "very large", ifelse(senior_portion >= 8, "large", ifelse(senior_portion >= 5, "middle", "small"))))
###문제4. grade에 대한 빈도를 구하시오.
midwest$grade <- factor(midwest$grade, levels = c("very large", "large", "middle", "small"))
table(midwest$grade)
###문제5. midwest_income.csv에는 county별로 1인당 연간 소득(단위: 달러) 변수 income을 포함하고 있다. 동일한 이름의 데이터 프레임을 만들고 midwest와 midwest_income을 통합한 후, income 전체 평균을 구하시오.
midwest_income <- read.csv("midwest_income.csv", stringsAsFactors = F, fileEncoding = "euc-kr")
midwest <- left_join(midwest, midwest_income, by="PID")
mean(midwest$income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior/poptotal*100 < 5) %>% select(county, income) %>% summarise(mean(income))
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest %>% filter(percyouth >= 40 & senior_portion < 5) %>% select(county, income) %>% summarise(mean(income))
midwest_new <- midwest %>% select(percyouth,senior_portion,income) %>% filter(percyouth>=40 & senior_portion<5)
midwest_new <- midwest %>% select(percyouth,senior_portion,income)
###문제6. 미성년인구비율이 40%이상이고, senior 비율이 5% 미만인 county의 연간소득 평균값은 얼마인가?
midwest_test <- midwest %>% filter(percyouth >= 40 & senior_portion < 5) %>% select(county, income)
mean(midwest_test$income)
install.packages("foreign")
library(foreign)
raw_welfare <- read.spss(file="2015 welfare.sav", to.data.frame = T)
welfare <- raw_welfare
View(raw_welfare)
View(welfare)
welfare <- welfare %>% rename(gender = h10_g3, birth = h10_g4, marriage = h10_g10, religion = h10_g11, job = h10_eco9, income = p1002_8aq1, region = h10_reg7)
#7개 변수로만 구성된 데이터 프레임 만들기
welfare7 <- welfare %>% select(gender, birth, marriage, religion, job, income, region)
#성별 변수 전처리
welfare7$gender <- ifelse(welfare7$gender == 1, "male", "female")
table(welfare7$gender)
welfare7$gender <- as.factor(welfare7$gender)
str(welfare7)
# 월급 변수 전처리
summary(welfare7$income)
hist(welfare7$income, breaks = seq(0, 2400, by=50)
hist(welfare7$income, breaks = seq(0, 2400, by=50))
hist(welfare7$income, breaks = seq(0, 2400, by=50))
welfare7$income <- ifelse(welfare7$income == 9999, NA, welfare$income)
head(welfare)
install.packages("foreign")
library(foreign)
library(dplyr)
## 데이터 프레임 만들기 ##
raw_welfare <- read.spss(file = "2015 welfare.sav", to.data.frame = T)
welfare <- raw_welfare
##변수명 바꾸어서 서브 데이터 프레임 만들기##
welfare <- welfare %>% rename(gender = h10_g3, birth = h10_g4, marriage = h10_g10, religion = h10_g11, job = h10_eco9, income = p1002_8aq1, region = h10_reg7)
welfare7 <- welfare %>% select(gender, birth, marriage, religion, job, income, region)
## 성별 변수 전처리 ##
str(welfare7$gender)
summary(welfare7$gender)
table(welfare7$gender)
welfare7$gender <- ifelse(welfare7$gender == 1, "male", "female")
welfare7$gender <- as.factor(welfare7$gender)
## 월급 변수 전처리 ##
summary(welfare7$income)
hist(welfare7$income, breaks = seq(0, 2400, by = 50))
welfare7$income <- ifelse(welfare7$income == 9999, NA, welfare7$income)
head(welfare)
table(welfare7$income == 0)
welfare7$income <- ifelse(welfare7$income == 0, NA, welfare7$income)
table(is.na(welfare7$income))
## 성별에 따른 월급 차이 분석 ##
gender_income <- welfare7 %>% group_by(gender) %>% summarise(mean_income = mean(income, na.rm = T))
library(ggplot2)
ggplot(gender_income, aes(gender, mean_income, fill = mean_income)) + geom_bar(stat = "identity")
install.packages("foreign")
install.packages("foreign")
